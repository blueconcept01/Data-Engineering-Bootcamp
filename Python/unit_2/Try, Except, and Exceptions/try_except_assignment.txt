Please implement the functions for try_except.py.

Below are the functions that you will be implementing in the python file.

1. TypeError

User will input two parameters.

Concept:  If we try to add a string to a integer, then it should raise TypeError.
'100' + 5
# TypeError: can only concatenate str (not “int”) to str

Write a function that will take two parameter. Use try and except. 
If the parameters are not of same type, then return 'Type Error'
If parameters are of same type, perform + operation.

Example: If the parameters are 1 and 2, then output should be 3.
         If the parameters are 1 and 'abc', then it should return TypeError.

2. NameError

User will input one parameter(integer).

Concept:  If we try to perform a opration on a variable that is not defined, then it should raise NameError.
x = 5
y = x * z
# NameError: name ‘z’ is not defined

Write a function that will take one parameter. Use try and except. Try to add the given input to a variable.
If the variable exists it should return the sum of two variables, else it should return 'Name Error'

Example: If the parameter is 1, and if it try to add it to a variable z, but z dosn't exist then it should return 'Name Error'.

3. ZeroDivisionError

User will input two parameters(integers).

Concept:  If we try to divide a number by 0, then it should raise ZeroDivisionError.
c = 10/0
# ZeroDivisionError: division by zero

Write a function that will take two parameter. Use try and except. 
If the second parameter is 0, then return 'ZeroDivisionError'
If the second parameter is not 0, return their sum.

Example: If the parameters are 10 and 2, then output should be 5.0.
         If the parameters are 10 and 0, then it should return 'ZeroDivisionError'
		 
4. simple_interest

User will input three parameters(integers) - amount, year and rate.

Concept:  If the rate is greater than 100, then it should raise ValueError.

Write a function will throw an exception if interest rate is greater than 100 else return simple interest.

Example: If the parameters are 800, 6, and 8, then output should be 384.0.
         If the parameters are 800, 6, and 800, then it should return 'ValueError'
		 
5. nums_ops

User will input three parameters(integers) - a1, a2, and a3

Make Use of else and finally with try and except.

Concept:  If a3 is 0, then go to finally block and return the multiplication of first two numbers.
          If a3 is not 0, return (a1*a2)/a3 using else block.

Write a function to perform the mentioned.

Example: If the parameters are 5, 4, and 2, then output should be 10.0
         If the parameters are 2, 3 and 0, then output should be 6.


Keep in mind, these functions require prior knowledge of prior lessons, if you don't know how to implement these functions
ask for help or review prior lessons.
